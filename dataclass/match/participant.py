from dataclasses import dataclass, asdict, field
from typing import Dict, Any

from dacite import from_dict

from dataclass.base_dataclass import BaseDataclass
from dataclass.match.challenges import Challenges
from dataclass.match.perks import Perks


@dataclass
class Participant(BaseDataclass):
    assists: int = field(default=0)
    baronKills: int = field(default=0)
    bountyLevel: int = field(default=0)
    challenges: Challenges = field(default_factory=Challenges)
    champExperience: int = field(default=0)
    champLevel: int = field(default=0)
    championId: int = field(default=0)
    championName: str = field(default="")
    championTransform: int = field(default=0)
    consumablesPurchased: int = field(default=0)
    damageDealtToBuildings: int = field(default=0)
    damageDealtToObjectives: int = field(default=0)
    damageDealtToTurrets: int = field(default=0)
    damageSelfMitigated: int = field(default=0)
    deaths: int = field(default=0)
    detectorWardsPlaced: int = field(default=0)
    doubleKills: int = field(default=0)
    dragonKills: int = field(default=0)
    eligibleForProgression: int = field(default=0)
    firstBloodAssist: int = field(default=0)
    firstBloodKill: int = field(default=0)
    firstTowerAssist: int = field(default=0)
    firstTowerKill: int = field(default=0)
    gameEndedInEarlySurrender: int = field(default=0)
    gameEndedInSurrender: int = field(default=0)
    goldEarned: int = field(default=0)
    goldSpent: int = field(default=0)
    individualPosition: str = field(default="")
    inhibitorKills: int = field(default=0)
    inhibitorTakedowns: int = field(default=0)
    inhibitorsLost: int = field(default=0)
    item0: int = field(default=0)
    item1: int = field(default=0)
    item2: int = field(default=0)
    item3: int = field(default=0)
    item4: int = field(default=0)
    item5: int = field(default=0)
    item6: int = field(default=0)
    itemsPurchased: int = field(default=0)
    killingSprees: int = field(default=0)
    kills: int = field(default=0)
    lane: str = field(default="")
    largestCriticalStrike: int = field(default=0)
    largestKillingSpree: int = field(default=0)
    largestMultiKill: int = field(default=0)
    longestTimeSpentLiving: int = field(default=0)
    magicDamageDealt: int = field(default=0)
    magicDamageDealtToChampions: int = field(default=0)
    magicDamageTaken: int = field(default=0)
    neutralMinionsKilled: int = field(default=0)
    nexusKills: int = field(default=0)
    nexusLost: int = field(default=0)
    nexusTakedowns: int = field(default=0)
    objectivesStolen: int = field(default=0)
    objectivesStolenAssists: int = field(default=0)
    participantId: int = field(default=0)
    pentaKills: int = field(default=0)
    perks: Perks = field(default_factory=Perks)
    physicalDamageDealt: int = field(default=0)
    physicalDamageDealtToChampions: int = field(default=0)
    physicalDamageTaken: int = field(default=0)
    profileIcon: int = field(default=0)
    puuid: str = field(default="")
    quadraKills: int = field(default=0)
    riotIdName: str = field(default="")
    riotIdTagline: str = field(default="")
    role: str = field(default="")
    sightWardsBoughtInGame: int = field(default=0)
    spell1Casts: int = field(default=0)
    spell2Casts: int = field(default=0)
    spell3Casts: int = field(default=0)
    spell4Casts: int = field(default=0)
    summoner1Casts: int = field(default=0)
    summoner1Id: int = field(default=0)
    summoner2Casts: int = field(default=0)
    summoner2Id: int = field(default=0)
    summonerId: str = field(default="")
    summonerLevel: int = field(default=0)
    summonerName: str = field(default="")
    teamEarlySurrendered: int = field(default=0)
    teamId: int = field(default=0)
    teamPosition: str = field(default="")
    timeCCingOthers: int = field(default=0)
    timePlayed: int = field(default=0)
    totalDamageDealt: int = field(default=0)
    totalDamageDealtToChampions: int = field(default=0)
    totalDamageShieldedOnTeammates: int = field(default=0)
    totalDamageTaken: int = field(default=0)
    totalHeal: int = field(default=0)
    totalHealsOnTeammates: int = field(default=0)
    totalMinionsKilled: int = field(default=0)
    totalTimeCCDealt: int = field(default=0)
    totalTimeSpentDead: int = field(default=0)
    totalUnitsHealed: int = field(default=0)
    tripleKills: int = field(default=0)
    trueDamageDealt: int = field(default=0)
    trueDamageDealtToChampions: int = field(default=0)
    trueDamageTaken: int = field(default=0)
    turretKills: int = field(default=0)
    turretTakedowns: int = field(default=0)
    turretsLost: int = field(default=0)
    unrealKills: int = field(default=0)
    visionScore: int = field(default=0)
    visionWardsBoughtInGame: int = field(default=0)
    wardsKilled: int = field(default=0)
    wardsPlaced: int = field(default=0)
    win: int = field(default=0)

    def to_dict(self) -> Dict[str, Any]:
        data = asdict(self)
        return data

    @classmethod
    def from_dict(cls, data: Any) -> "Participant":
        data['challenges'] = Challenges.from_dict(data['challenges']).to_dict()
        data['perks'] = Perks.from_dict(data['perks']).to_dict()
        return from_dict(cls, data=data)
