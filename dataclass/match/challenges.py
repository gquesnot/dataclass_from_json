from dataclasses import dataclass, asdict, field
from typing import Dict, Any

from dacite import from_dict

from dataclass.base_dataclass import BaseDataclass


@dataclass
class Challenges(BaseDataclass):
    _12AssistStreakCount: int = field(default=0)
    abilityUses: int = field(default=0)
    acesBefore15Minutes: int = field(default=0)
    alliedJungleMonsterKills: float = field(default=.0)
    baronTakedowns: int = field(default=0)
    blastConeOppositeOpponentCount: int = field(default=0)
    bountyGold: int = field(default=0)
    buffsStolen: int = field(default=0)
    completeSupportQuestInTime: int = field(default=0)
    controlWardTimeCoverageInRiverOrEnemyHalf: float = field(default=.0)
    controlWardsPlaced: int = field(default=0)
    damagePerMinute: float = field(default=.0)
    damageTakenOnTeamPercentage: float = field(default=.0)
    dancedWithRiftHerald: int = field(default=0)
    deathsByEnemyChamps: int = field(default=0)
    dodgeSkillShotsSmallWindow: int = field(default=0)
    doubleAces: int = field(default=0)
    dragonTakedowns: int = field(default=0)
    earliestBaron: float = field(default=.0)
    earliestDragonTakedown: float = field(default=.0)
    earlyLaningPhaseGoldExpAdvantage: int = field(default=0)
    effectiveHealAndShielding: float = field(default=.0)
    elderDragonKillsWithOpposingSoul: int = field(default=0)
    elderDragonMultikills: int = field(default=0)
    enemyChampionImmobilizations: int = field(default=0)
    enemyJungleMonsterKills: float = field(default=.0)
    epicMonsterKillsNearEnemyJungler: int = field(default=0)
    epicMonsterKillsWithin30SecondsOfSpawn: int = field(default=0)
    epicMonsterSteals: int = field(default=0)
    epicMonsterStolenWithoutSmite: int = field(default=0)
    firstTurretKilledTime: float = field(default=.0)
    flawlessAces: int = field(default=0)
    fullTeamTakedown: int = field(default=0)
    gameLength: float = field(default=.0)
    getTakedownsInAllLanesEarlyJungleAsLaner: int = field(default=0)
    goldPerMinute: float = field(default=.0)
    hadAfkTeammate: int = field(default=0)
    hadOpenNexus: int = field(default=0)
    highestCrowdControlScore: int = field(default=0)
    immobilizeAndKillWithAlly: int = field(default=0)
    initialBuffCount: int = field(default=0)
    initialCrabCount: int = field(default=0)
    jungleCsBefore10Minutes: float = field(default=.0)
    junglerTakedownsNearDamagedEpicMonster: int = field(default=0)
    kTurretsDestroyedBeforePlatesFall: int = field(default=0)
    kda: float = field(default=.0)
    killAfterHiddenWithAlly: int = field(default=0)
    killParticipation: float = field(default=.0)
    killedChampTookFullTeamDamageSurvived: int = field(default=0)
    killingSprees: int = field(default=0)
    killsNearEnemyTurret: int = field(default=0)
    killsOnOtherLanesEarlyJungleAsLaner: int = field(default=0)
    killsOnRecentlyHealedByAramPack: int = field(default=0)
    killsUnderOwnTurret: int = field(default=0)
    killsWithHelpFromEpicMonster: int = field(default=0)
    knockEnemyIntoTeamAndKill: int = field(default=0)
    landSkillShotsEarlyGame: int = field(default=0)
    laneMinionsFirst10Minutes: int = field(default=0)
    laningPhaseGoldExpAdvantage: int = field(default=0)
    legendaryCount: int = field(default=0)
    lostAnInhibitor: int = field(default=0)
    maxCsAdvantageOnLaneOpponent: float = field(default=.0)
    maxKillDeficit: int = field(default=0)
    maxLevelLeadLaneOpponent: int = field(default=0)
    moreEnemyJungleThanOpponent: float = field(default=.0)
    multiKillOneSpell: int = field(default=0)
    multiTurretRiftHeraldCount: int = field(default=0)
    multikills: int = field(default=0)
    multikillsAfterAggressiveFlash: int = field(default=0)
    mythicItemUsed: int = field(default=0)
    outerTurretExecutesBefore10Minutes: int = field(default=0)
    outnumberedKills: int = field(default=0)
    outnumberedNexusKill: int = field(default=0)
    perfectDragonSoulsTaken: int = field(default=0)
    perfectGame: int = field(default=0)
    pickKillWithAlly: int = field(default=0)
    poroExplosions: int = field(default=0)
    quickCleanse: int = field(default=0)
    quickFirstTurret: int = field(default=0)
    quickSoloKills: int = field(default=0)
    riftHeraldTakedowns: int = field(default=0)
    saveAllyFromDeath: int = field(default=0)
    scuttleCrabKills: int = field(default=0)
    shortestTimeToAceFromFirstTakedown: float = field(default=.0)
    skillshotsDodged: int = field(default=0)
    skillshotsHit: int = field(default=0)
    snowballsHit: int = field(default=0)
    soloBaronKills: int = field(default=0)
    soloKills: int = field(default=0)
    soloTurretsLategame: int = field(default=0)
    stealthWardsPlaced: int = field(default=0)
    survivedSingleDigitHpCount: int = field(default=0)
    survivedThreeImmobilizesInFight: int = field(default=0)
    takedownOnFirstTurret: int = field(default=0)
    takedowns: int = field(default=0)
    takedownsAfterGainingLevelAdvantage: int = field(default=0)
    takedownsBeforeJungleMinionSpawn: int = field(default=0)
    takedownsFirstXMinutes: int = field(default=0)
    takedownsInAlcove: int = field(default=0)
    takedownsInEnemyFountain: int = field(default=0)
    teamBaronKills: int = field(default=0)
    teamDamagePercentage: float = field(default=.0)
    teamElderDragonKills: int = field(default=0)
    teamRiftHeraldKills: int = field(default=0)
    threeWardsOneSweeperCount: int = field(default=0)
    tookLargeDamageSurvived: int = field(default=0)
    turretPlatesTaken: int = field(default=0)
    turretTakedowns: int = field(default=0)
    turretsTakenWithRiftHerald: int = field(default=0)
    twentyMinionsIn3SecondsCount: int = field(default=0)
    unseenRecalls: int = field(default=0)
    visionScoreAdvantageLaneOpponent: float = field(default=.0)
    visionScorePerMinute: float = field(default=.0)
    wardTakedowns: int = field(default=0)
    wardTakedownsBefore20M: int = field(default=0)
    wardsGuarded: int = field(default=0)
    junglerKillsEarlyJungle: int = field(default=0)
    killsOnLanersEarlyJungleAsJungler: int = field(default=0)
    teleportTakedowns: int = field(default=0)
    highestWardKills: int = field(default=0)
    highestChampionDamage: int = field(default=0)

    def to_dict(self) -> Dict[str, Any]:
        data = asdict(self)
        data['12AssistStreakCount'] = data['_12AssistStreakCount']
        del data['_12AssistStreakCount']
        return data

    @classmethod
    def from_dict(cls, data: Any) -> "Challenges":
        data['_12AssistStreakCount'] = data['12AssistStreakCount']
        del data['12AssistStreakCount']
        return from_dict(cls, data=data)
